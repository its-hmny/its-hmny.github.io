import { useSpring } from '@react-spring/core';
import { a as three } from '@react-spring/three';
import { useGLTF } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';
import { useEffect, useMemo, useRef, useState } from 'react';
import * as THREE from 'three';
import { Group } from 'three';


export default function MacbookAir() {
  // Gets a mutable reference to the 'main' group for the model
  const group = useRef<Group>(null!);
  // Loads the GLTF model asynchronously
  const { nodes, materials } = useGLTF('/MacbookAir.glb') as any;

  // Take care of cursor state 'onHover' and trigger the animation with 'onClick'
  const [isHovered, setHovered] = useState(false);
  const [isClicked, setClicked] = useState(false);
  
  // We turn this into a spring animation that interpolates between 0 and 1
  const {open} = useSpring({ open: Number(isClicked) })
  // The hinge value is interpolated based on the progressive 'open' animation
  const hinge = useMemo(() => open.to([0, 1], [1.575, -0.425]), [open])

  useEffect(() => void (document.body.style.cursor = isHovered ? 'pointer' : 'auto'), [isHovered]);

  // Make it float in the air when it's opened
  useFrame(state => {
    const t = state.clock.getElapsedTime();
    group.current.rotation.x = THREE.MathUtils.lerp(group.current.rotation.x, open ? Math.cos(t / 10) / 10 + 0.25 : 0, 0.1);
    group.current.rotation.y = THREE.MathUtils.lerp(group.current.rotation.y, open ? Math.sin(t / 10) / 4 : 0, 0.1);
    group.current.rotation.z = THREE.MathUtils.lerp(group.current.rotation.z, open ? Math.sin(t / 10) / 10 : 0, 0.1);
    group.current.position.y = THREE.MathUtils.lerp(group.current.position.y, open ? (-2 + Math.sin(t)) / 3 : -4.3, 0.1,);
  });

  // The view was auto-generated by: https://github.com/pmndrs/gltfjsx
  // Events and spring animations were added afterwards
  return (
    <group ref={group} onClick={() => setClicked(!isClicked)} onPointerOver={() => setHovered(true)} onPointerOut={() => setHovered(false)}>
      <three.group rotation-x={hinge} position={[0, -0.04, 0.41]}>
        <group position={[0, 2.96, -0.13]} rotation={[Math.PI / 2, 0, 0]}>
          <mesh material={materials.aluminium} geometry={nodes['Cube008'].geometry} />
          <mesh material={materials['matte.001']} geometry={nodes['Cube008_1'].geometry} />
          <mesh material={materials['screen.001']} geometry={nodes['Cube008_2'].geometry} />
        </group>
      </three.group>

      <mesh material={materials.keys} geometry={nodes.keyboard.geometry} position={[1.79, 0, 3.45]} />
      
      <group position={[0, -0.1, 3.39]}>
        <mesh material={materials.aluminium} geometry={nodes['Cube002'].geometry} />
        <mesh material={materials.trackpad} geometry={nodes['Cube002_1'].geometry} />
      </group>
      
      <mesh material={materials.touchbar} geometry={nodes.touchbar.geometry} position={[0, -0.03, 1.2]} />
    </group>
  );
}
